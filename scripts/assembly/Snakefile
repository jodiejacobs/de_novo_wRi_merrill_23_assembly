#Completed on 9/12/2024
#to run this script:
#cd /private/groups/russelllab/jodie/merrill_23_wRi_genome/
#conda activate snakemake_v8 
#snakemake --executor slurm --default-resources slurm_partition=medium runtime=720 mem_mb=1000000 -j 10 -s Snakefile

#Global Variables:

import os  
import glob

data = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data'
sample_numbers = ['24']

samples = ["merrill_23_all_basecalled"]

conda: '/private/groups/russelllab/jodie/bootcamp2024/scripts/read_filtering.yaml'   

rule all:
        input:expand('/private/groups/russelllab/jodie/merrill_23_wRi_genome/busco/{sample}/raw/wRi/short_summary.specific.fasta', sample =  samples)

rule sort_bam:
    input:
        bam = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/{sample}.bam'
    output:
        sorted_bam = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/{sample}.sorted.bam'
    resources: 
        mem_mb=100000,
        runtime=200

    threads: 16  
    shell:
        '''
            samtools sort -@ 16 -o {output.sorted_bam} {input.bam}
            samtools index  -@ 16 {output.sorted_bam}  
        '''
rule separate_bam:
    input:
        bam = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/{sample}.sorted.bam'
    output:
        host_bam = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/{sample}.Dsim.bam',
        wolbachia_bam = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/{sample}.wRi.bam'
    resources: 
        mem_mb=100000,
        runtime=200

    threads: 8  
    shell:
        '''
            samtools view -@ 8 -b -f 4 {input.bam} > {output.wolbachia_bam}
            samtools view -@ 8 -b -F 4 {input.bam} > {output.host_bam}
        '''

rule bam2fastq:
    input:
        host_bam = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/{sample}.Dsim.bam',
        wolbachia_bam = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/{sample}.wRi.bam'
    output:
        host_fastq = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/{sample}.Dsim.fastq.gz',
        wolbachia_fastq = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/{sample}.wRi.fastq.gz',
    resources: 
        mem_mb=100000,
        runtime=200

    threads: 8  
    shell:
        '''
            samtools bam2fq -@ 8 {input.host_bam} | gzip > {output.host_fastq}
            samtools bam2fq  -@ 8 {input.wolbachia_bam} | gzip > {output.wolbachia_fastq}
        '''

rule assembly:
    input:
        host_fastq = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/{sample}.Dsim.fastq.gz',
        wolbachia_fastq = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/nanopore_data/basecalled/{sample}.wRi.fastq.gz',
    output:
        host_assembly = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/flye/{sample}/Dsim/assembly.fasta',
        wolbachia_assembly = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/flye/{sample}/wRi/assembly.fasta',
    params:
        host_dir = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/flye/{sample}/Dsim/',
        wolbachia_dir = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/flye/{sample}/wRi/',
    resources: 
        mem_mb=100000,
        runtime=200

    threads: 16  
    shell:
        ''' 
            mkdir -p {params.host_dir}
            mkdir -p {params.wolbachia_dir}   
            flye --nano-hq {input.host_fastq} -t 16 --out-dir {output.host_assembly} --genome-size 180m
            flye --nano-hq {input.wolbachia_fastq} -t 16 --out-dir {output.wolbachia_assembly} --genome-size 1.2m
        '''

rule BUSCO:
    input:
        host_assembly = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/flye/{sample}/Dsim/assembly.fasta',
        wolbachia_assembly = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/flye/{sample}/wRi/assembly.fasta',
    output:
        host_busco = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/busco/{sample}/raw/Dsim/short_summary.specific.fasta',
        wolbachia_busco = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/busco/{sample}/raw/wRi/short_summary.specific.fasta',
    params:
        host_busco = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/busco/{sample}/raw/Dsim/',
        wolbachia_busco = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/busco/{sample}/raw/wRi/',
    resources: 
        mem_mb=100000,
        runtime=200

    threads: 16  
    shell:
        ''' 
            mkdir -p {params.host_busco}   
            mkdir -p {params.wolbachia_busco}
            busco -i {input.host_assembly} -o {params.host_busco} -l diptera_odb10 -m genome --cpu 16 
            busco -i {input.wolbachia_assembly} -o {params.wolbachia_busco} -l rickettsiales_odb10  -m genome --cpu 16
        '''

rule polish:
    input:
        host_assembly = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/flye/{sample}/Dsim/assembly.fasta',
        wolbachia_assembly = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/flye/{sample}/wRi/assembly.fasta',
        host_short_reads = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/short_reads/{sample}.trimmed.filtered.fastq.gz',
        wolbachia_short_reads = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/short_reads/{sample}.trimmed.filtered.fastq.gz'
    output:    
        host_polished = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/polished/{sample}/Dsim/assembly.fasta',
        wolbachia_polished = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/polished/{sample}/wRi/assembly.fasta'
    params:
        host_dir = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/polished/{sample}/Dsim/',
        wolbachia_dir = '/private/groups/russelllab/jodie/merrill_23_wRi_genome/polished/{sample}/wRi/'
    resources: 
        mem_mb=100000,
        runtime=200
    threads: 16
    shell:
        '''
        # Create output directories
        mkdir -p {params.host_dir}
        mkdir -p {params.wolbachia_dir}
        
        # Align host reads to host assembly
        bwa mem -t {threads} {input.host_assembly} {input.host_short_reads} | \
            sambamba view -f bam -S /dev/stdin | \
            sambamba sort -t {threads} -o {params.host_dir}/host_sorted.bam /dev/stdin

        # Mark duplicates for host
        sambamba markdup -t {threads} {params.host_dir}/host_sorted.bam {params.host_dir}/host_dedup.bam
        
        # Polish host assembly with Pilon
        pilon --genome {input.host_assembly} \
              --bam {params.host_dir}/host_dedup.bam \
              --output {output.host_polished} \
              --threads {threads}

        # Align Wolbachia reads to Wolbachia assembly
        bwa mem -t {threads} {input.wolbachia_assembly} {input.wolbachia_short_reads} | \
            sambamba view -f bam -S /dev/stdin | \
            sambamba sort -t {threads} -o {params.wolbachia_dir}/wolbachia_sorted.bam /dev/stdin

        # Mark duplicates for Wolbachia
        sambamba markdup -t {threads} {params.wolbachia_dir}/wolbachia_sorted.bam {params.wolbachia_dir}/wolbachia_dedup.bam
        
        # Polish Wolbachia assembly with Pilon
        pilon --genome {input.wolbachia_assembly} \
              --bam {params.wolbachia_dir}/wolbachia_dedup.bam \
              --output {output.wolbachia_polished} \
              --threads {threads}
        '''